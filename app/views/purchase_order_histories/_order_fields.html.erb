
<div class="nested-fields well form-inline">
  <%= f.label :品番選択, {style: 'width:770px'}  %>
  <!--<%= f.label :数量, {style: 'width:100px'}  %>-->
  <%= f.label :単位, {style: 'width:50px'}  %>
  </br>
  <!--<%= f.collection_select :material_id, MaterialMaster.all, :id, :p_material_code_name, {:selected => f.object.material_id || 1} , 
       {id:"material_id", name:"material_id[]",  class: "searchableMaterial" , style: 'width:650px'  } %>-->
  <%= f.collection_select :material_id, MaterialMaster.all, :id, :p_material_code_name, {:selected => f.object.material_id || 1} , 
  {class: "searchableMaterial" , name:"material_id[]",  style: 'width:650px'  } %>
  <!--<%= f.input :quantity,  input_html:{id: "quantity", name: "quantity", style: 'width:100px', :tabindex=>"0"} %>-->
  <!--<%= f.input :quantity,  input_html:{ id: "quantity", name:"purchase_order_history[quantity]", style: 'width:100px', :tabindex=>"0"} %>-->
  <%= f.label :数量, {style: 'width:28px'}  %>
  <%= f.text_field :quantity, size:10, tabindex:"0", name:"quantity[]" %>
  <td>&nbsp;&nbsp;</td>
  <%= f.collection_select :unit_master_id, UnitMaster.all, :id, :unit_name, {:selected => f.object.unit_master_id || 3} , {class: "searchableUnit" , style: 'width:50px', :tabindex=>"1"} %>
  <!--以下スペースあり-->
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  <%= link_to_remove_association 'アイテム削除', f , :class => 'btn btn-xs btn-danger'%>
  </br>
  <%= f.input :material_code,  input_html:{style: 'width:150px', :tabindex=>"2" } %>
  <%= f.input :material_name,  input_html:{style: 'width:400px', :tabindex=>"3" } %>
  <%= f.input :maker_name,  input_html:{style: 'width:150px', :tabindex=>"4" } %>
  <%= f.input :list_price,  input_html:{style: 'width:100px', :tabindex=>"5" } %>
  
  <!--<%= f.label :＊手入力用 %>-->
  
  <%= f.input :material_code,  input_html:{id:"material_code_hide", name:"material_code_hide" }, as: :hidden %></br>
  
  <!--<hr style="border-top:2px outset #c0c0c0;width: 100%;height:2;">-->
</div>  
 
 <script type="text/javascript">

  cIndex = 0;
  //var i = 0;

  $(document).ready(function(){
  //$(document).on('turbolinks:load', function(){
      //検索可能なリストボックス(品名の場合)
       //$(".searchableId").select2({ theme: "classic" });
	   $(".searchableMaterial").select2({ theme: "classic" });
　　　　　　
          //select2をenterキー押下した場合(リストが閉じられた時)のタブ移動。イマイチだが・・
	   $( ".searchableMaterial" ).on("select2:close", function (e) {
	        setTimeout(function() {
		    $('[tabindex=0]').focus();
		}, 0);  
	   });　　　　　	   


	   $( ".searchableMaterial" ).change(function(e) {
	     //うまくいかないため一旦保留 
		 setItem(e);
	   });
	   
	   
	   $( ".searchableMaterial" ).on("select2:open",(function(e) {
      　 //i = 0;
	    cIndex = 0;
	   }));
	   
	   $(".searchableUnit").select2({ theme: "classic" });
	   //select2をenterキー押下した場合(リストが閉じられた時)のタブ移動。イマイチだが・・
	   $( ".searchableUnit" ).on("select2:close", function (e) {
	        setTimeout(function() {
		    $('[tabindex=2]').focus();
		}, 0);  
	   });　　　　　   
      
 });  
  
  
  //更新前に数量をチェックする
  //function checkQuantity(ok_flag){
  var checkQuantity = function(ok_flag){ 
  
    quantity = document.getElementsByName("quantity[]");
	item = document.getElementsByName("material_id[]");
	
	
	//var message = "";
	
	for (var i = 0; i < quantity.length ; i ++) {
	    if (quantity[i].value == undefined || quantity[i].value == 0){
	      //debugger;
		  itemName = item[i].options[item[i].selectedIndex].innerText;
		  
		  window.confirm(itemName + 'の数量を入力してください。');
		  //message = message + itemName + 'の数量を入力してください。';
		  
		  ok_flag = false;
	    }
	}
	
	//if (ok_flag == false){
	//  window.confirm( message );
	//}
	
	return ok_flag;
  }
  
  
  //function checkMaker(f)
  //{
  //   checkQuantity(f.quantity.value);
  //}  
  
 //function checkQuantity(f)
 // {
 //    if (f.value == undefined || f.value == 0){
 //      window.confirm('数量を入力してください。')
 //	   return false;
 //	 }
 // }
  
    // this refers to the select that its value has changed
    // and next('input') finds the input right after it
	//debugger;
    //$(this).next('input[data-field=material_id]').val(data.item.default_price);
  
  //各値の自動セット-ajax
  function setItem(e)
  {  
     //objId = document.getElementsByName("material_id");
	 objId = document.getElementById("material_id");
	 
	 product_select = $(this)
	 //product_select.parent().find('.cost-input').val(product_select.find(':selected').data('unit_cost'))
	 //product_select.parent().find('.searchableMaterial').val(product_select.find(':selected').data('material_id'))
	 
	 var id = product_select.find(':selected').data('material_id')
	 
	 //debugger;
	 
	 //it's pending caz not work..
	 //cIndex += 1;     
     //項目名
     // $.get("<%= purchase_order_datum_material_select_path %>",
     //  {id: id },
     //   function(data){
     //     document.getElementsByName("material_code")[cIndex -1].value = document.getElementsByName("material_code_hide")[0].textContent;
	//	  }
     // );
  }  
  
  //ENTER→TABキーに変換する処理。
  //レンダリングの場合は、共通化ができない（なぜか）
  $('[tabindex]').keydown(function (e) {
    if (e.keyCode == 13 || e.keyCode == 9) {
        var tabindex = parseInt($(this).attr('tabindex'));
        $('[tabindex='+(tabindex+1)+']').focus();
    
	    return false;
	}
    
  }); 
   
 </script>
