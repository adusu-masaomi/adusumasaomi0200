
<div class="modal-dialog modal-lg" >
  <div class="modal-content" >
  <div style="padding-left : 15px;">
<%= simple_form_for @delivery_slip_detail_large_classification, remote: true, :html => { id: "mymodal", :class => 'form-horizontal' } do |f| %>
  
  <!--非表示のフィールド-->
  <!--件名(非表示)-->
  <%= f.input :delivery_slip_header_id, input_html:{id:"delivery_slip_header_id", :value => @delivery_slip_detail_large_classification.delivery_slip_header_id } , as: :hidden %>
  <!--品名／仕様区分(非表示)-->
  <%= f.input :delivery_slip_items_division_id, input_html:{id:"delivery_slip_items_division_id",  :value => 1 } , as: :hidden %>
  <!---->
  <%= f.label :"行番号" , { :class => "my-custom-class-l"} %></br>
  <div class="col-md-7" , style="margin-left : -15px">
  <%= f.select :line_number, DeliverySlipDetailLargeClassification.serial_number, {}, { id:"line_number", class: "searchableSelect2_1", 
                        style: 'width:100px' } %>
  <%= f.check_box :check_line_insert, {}, "true", "false" %>
  <%= f.label_tag :check_line_insert, '行挿入する　　' %>
  <%= f.label_tag :construction_type, '工事種別：' %>
  <%= f.select :construction_type, WorkingUnit.types, {:selected => @delivery_slip_detail_large_classification.construction_type || 0}, 
  {id:'construction_type', :class => "my-custom-class", style: 'width:120px;margin-left:8px;font-size:14px;', :onchange => "setLaborType()" } %>
  </div></br></br>
  <!--記号-->
  <!--upd170822-->
  <div class="col-xs-3" , style="margin-left : -15px">
  <%= f.label :working_large_item_short_name , {:class => "my-custom-class-l"} %></br>
  <%= f.collection_select :working_large_item_short_name, WorkingMiddleItem.order('seq').all, :id, :working_middle_item_short_name, 
    {:selected => @delivery_slip_detail_large_classification.working_large_item_id || 1} , {id:'working_large_item_short_name',
       :class => "searchableSelect2_2",  style: 'width:190px' } %></br>
  </div>
  
  <%= f.input :working_large_item_short_name_manual, label: "記号(手入力可)", label_html:{style:'margin-top:-5px;'}, 
                    input_html:{id:"working_large_item_short_name_manual", style: 'width:210px;margin-top:0px;', :tabindex=>"2" }  %>
  
  <!--add171104-->
  <div class="col-xs-3" , style="margin-left : -15px">
  <%= f.label :"(呼出用)カテゴリー" , {:class => "my-custom-class-l"} %></br>
  
  <%= f.select :working_middle_item_category_id_call, WorkingCategory.order('seq').all.map{|t| [t.category_name, t.id]}, {:include_blank => true}, 
    {id:'working_middle_item_category_id_call', :class => "my-custom-class", style: 'width:190px;font-size:14px;', :onchange => "setItemExtractByCategory(1)",:tabindex=>"3" } %>

  </div>
  <div class="col-xs-3" , style="margin-left : 10px">
  <%= f.label :"(登録用)カテゴリー" , {:class => "my-custom-class-l"} %></br>
  
  <%= f.select :working_middle_item_category_id, WorkingCategory.order('seq').all.map{|t| [t.category_name, t.id]}, {:selected => @delivery_slip_detail_large_classification.working_middle_item_category_id || 1}, 
    {id:'working_middle_item_category_id', :class => "my-custom-class", style: 'width:190px;font-size:14px;',:tabindex=>"4", 
     :onchange => "setSubacategoryExtractByParent(2)" } %>
	
  </div>
  </br></br></br>
  <!-- -->
  
  <!--カテゴリー（子） add180131-->
  <div class="col-xs-3" , style="margin-left : -15px">
  <%= f.label :"(呼出用)サブカテゴリー" , {:class => "my-custom-class-l"} %></br>
  
  <%= f.select :working_middle_item_subcategory_id_call, WorkingSubcategory.all.map{|t| [t.name, t.id]}, {:include_blank => true}, 
    {id:'working_middle_item_subcategory_id_call', :class => "my-custom-class", style: 'width:190px;font-size:14px;', :onchange => "setItemExtractBySubCategory()",:tabindex=>"5" } %>

  </div>
  <div class="col-xs-3" , style="margin-left : 10px">
  <%= f.label :"(登録用)サブカテゴリー" , {:class => "my-custom-class-l"} %></br>
  
  <%= f.select :working_middle_item_subcategory_id, WorkingSubcategory.all.map{|t| [t.name, t.id]}, {:include_blank => true}, 
    {id:'working_middle_item_subcategory_id', :class => "my-custom-class", style: 'width:190px;font-size:14px;',:tabindex=>"6" } %>
	
  </div>
  </br>
  
  <!--add180210-->
  <%= f.label :　 %><br>
  <%= f.radio_button :category_save_flag_child, 1 %> <%= f.label :カテゴリー引継, 1 %>
  <%= f.radio_button :category_save_flag_child, 2 %> <%= f.label :引継停止, 2 %>
  </br>
  
  <!-- -->
  
  
  <!--upd171106-->
  <div class="col-xs-3" , style="margin-left : -15px">
  <!--項目名-->
    <%= f.label :"項目名", {:class => "my-custom-class-l"} %></br>
    <%= f.collection_select :working_large_item_id, WorkingMiddleItem.order('seq').all, :id, :working_middle_item_name, 
      {:selected => @delivery_slip_detail_large_classification.working_large_item_id || 1} , {id:'working_large_item_id', 
	    :class => "searchableSelect2_3",  style: 'width:210px' } %></br>
  </div>
  <div class="col-xs-3" , style="margin-left : 0px">
    <%= f.label :"項目名(固有)" , {:class => "my-custom-class-l"} %></br>
    <%= f.collection_select :working_specific_middle_item_id, WorkingSpecificMiddleItem.where(:delivery_slip_header_id => params[:delivery_slip_header_id]).order('seq'), :id, :working_middle_item_name, 
      {:include_blank => true} , 
      {id:'working_specific_middle_item_id', :class => "searchableSelect2_5",  style: 'width:210px' } %>

  </div>
  </br></br></br>
  <!--upd end-->
  
  <%= f.input :working_large_item_name , label: "項目名(手入力可)", input_html:{id:"working_large_item_name", style: 'width:420px', :tabindex=> "9"}  %>
  <%= f.input :working_large_specification , label: "仕様名(手入力可)", input_html:{id:"working_large_specification", style: 'width:420px', :tabindex=>"10" }  %>
  
  <div class="col-xs-2" , style="margin-left : -15px">
  <%= f.input :quantity, label: "納品数量", :input_html => {id:'quantity', :tabindex=>"11", style: 'width:120px', 
                :value => @delivery_slip_detail_large_classification.quantity || 1, :onchange => "changeQuantity(0)" } %>
  </div>
  <div style="margin-left : -50px">
  <%= f.input :execution_quantity, :input_html => {id:'execution_quantity', :tabindex=>"12", style: 'width:120px',
                :value => @delivery_slip_detail_large_classification.execution_quantity || 1 , :onchange => "changeQuantity(1)" } %>
  </div>
  
  <!--単位-->
  <div class="col-xs-2" , style="margin-left : -15px;margin-top : -15px">
  <%= f.label :"単位" , {} %></br>
  <%= f.collection_select :working_unit_id, WorkingUnit.all, :id, :working_unit_name, {:prompt => 'どれか一つを選択して下さい', 
     :selected => @delivery_slip_detail_large_classification.working_unit_id || 1 } , {id:'working_unit_id', 
     :class => "searchableSelect2_4",  style: 'width:120px' } %></br>
  </div>
  <div style="margin-left : -50px;margin-top : -15px">
  <%= f.input :working_unit_name , label: "単位名(手入力可)", input_html:{id:"working_unit_name", :tabindex=>"14", style: 'width:120px',  :value => @delivery_slip_detail_large_classification.working_unit_name || WorkingUnit.where(:id => 1).pluck(:working_unit_name)   }  %>
  </div>
  
  <div class="col-xs-2" , style="margin-left : -15px;margin-top : -15px">
  <%= f.input :working_unit_price, input_html:{id:"working_unit_price", style: 'width:120px', :tabindex=>"15", :onchange => "calcTotalPrice()" } %>
  </div>
  <div style="margin-left : -50px;margin-top : -15px">
  <%= f.input :execution_unit_price, input_html:{id:"execution_unit_price", style: 'width:120px', :tabindex=>"16", :onchange => "calcTotalPrice()"} %>
  </div>
  
  <div class="col-xs-2" , style="margin-left : -15px;margin-top : -20px">
  <%= f.input :delivery_slip_price,  :input_html => {id:'delivery_slip_price', :tabindex=>"17", style: 'width:120px'} %>
  </div>
  <!--<div style="margin-left : -50px;margin-top : -20px">-->
  <div class="col-xs-2",  style="margin-left : -0px;margin-top : -20px">
  <%= f.input :execution_price, :input_html => {id:'execution_price', :tabindex=>"18", style: 'width:120px'} %>
  </div>
  
  <div style="margin-top : 25px">
  <%= button_tag "金額クリア", type: 'button', :class => 'btn btn-yellow300_rsd btn-xs', onclick: "clearPrice()" %>
  </div>
  </br></br></br>
  
  <div class="col-xs-2" , style="margin-left : -15px;margin-top : -15px">
  <%= f.input :labor_productivity_unit,  :input_html => {id:"labor_productivity_unit", :tabindex=>"19", style: 'width:120px', :onchange => "calcLaborTotal()"}  %>
  </div>
  <!--<div style="margin-top : -15px">-->
  <div class="col-xs-2", style="margin-left : -0px;margin-top : -20px">
  <%= f.input :labor_productivity_unit_total,  :input_html => {id:"labor_productivity_unit_total", :tabindex=>"20", style: 'width:120px'}  %>
  </div>
  
  <div style="margin-top : 10px">
  <%= button_tag "歩掛クリア", type: 'button', :class => 'btn btn-lightblue100_rsd btn-xs', onclick: "clearLaborProductivityUnit()" %>
  </div>
  </br></br></br>
  
  <!--add170223-->
  <%= f.check_box :piping_wiring_flag, :class => "piping_wiring_flag" %>
  <%= f.label_tag :piping_wiring_flag, '配管配線　　　' %> 
  <%= f.check_box :equipment_mounting_flag, :class => "equipment_mounting_flag" %>
  <%= f.label_tag :equipment_mounting_flag, '機器取付　　' %>
  <%= f.check_box :labor_cost_flag, :class => "labor_cost_flag" %>
  <%= f.label_tag :labor_cost_flag, '労務費' %>
  <!--add end-->
  
  <%= f.input :remarks,  :input_html => {:tabindex=>"21", style: 'width:420px'}  %>
  
  <%= f.check_box :check_update_item, {id:"check_update_item"}, "true", "false" %>
  <%= f.label_tag :check_update_item, '品名・仕様・単位のみマスター反映　　　' %> 
  <%= f.check_box :check_update_all, {id:"check_update_all"}, "true", "false" %>
  <%= f.label_tag :check_update_all, '全てマスター反映' %></br>
  
  <%= hidden_field_tag(:delivery_slip_header_id, 'index') %>
  <%= hidden_field_tag(:working_large_item_id, 'index') %>
  
  <%= f.collection_select :working_subcategory_select_hide, WorkingSubcategory.order('seq').all, :id, :name,  {} , 
         {id:"working_subcategory_select_hide",  hidden: true  } %>
  
  <!--add171104-->
  <%= f.input :master_insert_flag , input_html:{ id:"master_insert_flag"}, as: :hidden %>
  <%= f.collection_select :working_middle_item_id_select_hide, WorkingMiddleItem.order('seq').all, :id, :working_middle_item_name,  {} , 
    {id:"working_middle_item_id_select_hide",  hidden: true  } %>
  <%= f.collection_select :working_middle_item_short_name_select_hide, WorkingMiddleItem.order('seq').all, :id, :working_middle_item_short_name,  {} , 
    {id:"working_middle_item_short_name_select_hide",  hidden: true   } %>
  <!---->
  
  <!-- add180210 -->
  <%= f.input :action_flag, input_html:{id:'action_flag', :value => @action_flag} , as: :hidden %>
  
  <%= f.button :submit, :class => 'btn-primary', :onclick => "submitAfterValidation()" %>
  <!--<input type="button" onclick="submit();" class = 'btn btn-primary' value="登録する" />-->
  <%= link_to t('.cancel', :default => t("helpers.links.cancel")),
                delivery_slip_detail_large_classifications_path(delivery_slip_header_id: params[:delivery_slip_header_id], 
                  delivery_slip_header_name: params[:delivery_slip_header_name] ), :class => 'btn btn-white_rsd' %>
<% end %>
</div>
 </div>
</div>


<script type="text/javascript">
  //$(document).on('ready page:load', function(){
  
  //add170223
  //歩掛り集計専用の作業内訳マスターIDの定数(マスター変更時注意！)
  var piping_wiring_construction_index = 2;  //配管配線工事のマスターID
  var equipment_mounting_index = 3;          //機器取付工事のマスターID
  var labor_cost_index = 4;                  //労務費のマスターID
  //
  
  //モーダルの場合は、このコードがないとselect2が正常動作しない。
  $.fn.modal.Constructor.prototype.enforceFocus = function() {};
  
  
  $(document).ready(function(){
  
     //ドラッグできるようにする add171107
	 $("#myModal").draggable({
       handle: ".modal-dialog"
     }); 
  
     //行番号--select2のタブインデックスはここで指定。
     $(".searchableSelect2_1").select2({ theme: "bootstrap" }).on("load", function(e) { 
        $(this).prop('tabindex',0)}).trigger('load');
     $( ".searchableSelect2_1" ).on("select2:close", function (e) {
       nextControlSelect2(this);
     });
     //記号（品名（短縮名））--select2のタブインデックスはここで指定。
     $(".searchableSelect2_2").select2({ theme: "bootstrap" }).on("load", function(e) { 
        $(this).prop('tabindex',1)}).trigger('load');
	 $( ".searchableSelect2_2" ).on("select2:close", function (e) {
	   nextControlSelect2(this);
     });
	 $( ".searchableSelect2_2" ).change(function(e) {
    	document.getElementById("working_large_item_id").value = document.getElementById("working_large_item_short_name").value;
		$(".searchableSelect2_3").trigger("change");
		
		//add170822
        //記号(短縮)名をテキストへセット
		setShortName();
	 });
	 //項目名--select2のタブインデックスはここで指定。
     $(".searchableSelect2_3").select2({ theme: "bootstrap" }).on("load", function(e) { 
        $(this).prop('tabindex',7)}).trigger('load');
	 $( ".searchableSelect2_3" ).on("select2:close", function (e) {
	   nextControlSelect2(this);
     });
     $( ".searchableSelect2_3" ).change(function(e) {
         setWorkingLargeItemName();
	      setWorkingLarageSpecification();
		  setUnit();
		  setWorkingUnitPrice();
		  setExecutionUnitPrice();
		  //金額も計算
		  calcTotalPrice();
		  obj = document.getElementById("construction_type").value;
	      if (obj == "0") {
	        setLaborProductivityUnit();
		    setLaborProductivityUnitTotal();
		  }
     });
	 //単位--select2のタブインデックスはここで指定。
	 $(".searchableSelect2_4").select2({ theme: "bootstrap"}).on("load", function(e) { 
        $(this).prop('tabindex',13)}).trigger('load');
	  $( ".searchableSelect2_4" ).on("select2:close", function (e) {
	   nextControlSelect2(this);
     });
	 $( ".searchableSelect2_4" ).change(function(e) {
         setWorkingUnitName();
	 });
	 //
    
	 //項目名(固有)--select2のタブインデックスはここで指定。
	 $(".searchableSelect2_5").select2({ theme: "bootstrap" }).on("load", function(e) { 
        $(this).prop('tabindex',8)}).trigger('load');
	 $( ".searchableSelect2_5" ).on("select2:close", function (e) {
       nextControlSelect2(this);
     });
	 $( ".searchableSelect2_5" ).change(function(e) {
     //未確認
	     setWorkingSpecificMiddleItemName();
     });
	 //
	
	 //add170223
	 //歩掛りの集計をデフォルトでセットする
	 //-->随時更新するのでセットしない（手入力も考慮。）
	 //setLaborType();
	 
     //１つチェックがあれば、他のチェックを外す処理
	 $('.piping_wiring_flag').on('change', function(){
       if ($(this).is(':checked')) {
	    $('.equipment_mounting_flag').prop("checked",false);
		$('.labor_cost_flag').prop("checked",false);
       }
     });
     $('.equipment_mounting_flag').on('change', function(){
       if ($(this).is(':checked')) {
	    $('.piping_wiring_flag').prop("checked",false);
		$('.labor_cost_flag').prop("checked",false);
       }
     });
	 $('.labor_cost_flag').on('change', function(){
       if ($(this).is(':checked')) {
	    $('.piping_wiring_flag').prop("checked",false);
		$('.equipment_mounting_flag').prop("checked",false);
       }
     });
	 //add end
	 
	 //add170822
     //記号(短縮)名を最新の情報にする
	 setShortName();
     
     //add180210
     //呼出用カテゴリーの初期設定
     setItemExtractByCategoryInitial();
	
   });
  
  //各値の自動セット(固有)-ajax
  function setWorkingSpecificMiddleItemName()
  {  
     obj = document.getElementById("working_specific_middle_item_id");
     working_specific_middle_item_id = parseInt(obj.value);
	 
	  $.get("<%= delivery_slip_detail_large_classificationz_working_specific_middle_item_select_path %>",
       {working_specific_middle_item_id: working_specific_middle_item_id },
        function(data){
		  
		  //項目名
		  obj = document.getElementById("working_large_item_name").textContent;
          document.getElementById("working_large_item_name").value = obj;
		  //記号
		  obj = document.getElementById("working_large_item_short_name_manual").textContent;
          document.getElementById("working_large_item_short_name_manual").value = obj;
		  //仕様
		  obj = document.getElementById("working_large_specification").textContent;
          document.getElementById("working_large_specification").value = obj;
		  //単位名もセット
		  setWorkingUnitName();
		  //見積単価
		  obj = document.getElementById("working_unit_price").textContent;
          document.getElementById("working_unit_price").value = obj;
		  //calcTotalPrice();
		  //実行単価
		  obj = document.getElementById("execution_unit_price").textContent;
          document.getElementById("execution_unit_price").value = obj;
		  //金額も計算
		  calcTotalPrice();
		  
		  //歩掛
	      obj = document.getElementById("labor_productivity_unit").textContent;
          document.getElementById("labor_productivity_unit").value = obj;
		  //歩掛計
		  obj = document.getElementById("labor_productivity_unit_total").textContent;
          document.getElementById("labor_productivity_unit_total").value = obj;
		}
	 );
  }

  
  //カテゴリー別にアイテムを抽出する処理
  function setItemExtractByCategory(controlFlag){
    var category_id = document.activeElement.value;
   
    //if (category_id != "1"){
    //if (category_id != undefined){
     
	  $.get("<%= working_middle_itemz_item_extract_path %>",
         {working_middle_item_category_id: category_id},
          function(data){
		    //アイテムのリストを再配置
            document.getElementById("working_large_item_id").innerHTML = document.getElementById("working_middle_item_id_select_hide").innerHTML;
		   
		    //短縮名のリストを再配置
		    document.getElementById("working_large_item_short_name").innerHTML = document.getElementById("working_middle_item_short_name_select_hide").innerHTML;
		    //一旦手入力で選択する
		    //document.getElementById("working_large_item_short_name").value = "1"; 
		    //$(".searchableSelect2_2").trigger("change"); 
            
            //カテゴリー別のサブカテゴリーを抽出する
            setSubacategoryExtractByParent(controlFlag);
           
      });
    //}
  }
 
 //add180210
 //カテゴリー別にアイテムを抽出する処理(引継用)
 function setItemExtractByCategoryInitial(){
     var category_id = document.getElementById("working_middle_item_category_id_call").value;
     
     if (category_id != ""){
     
       $.get("<%= working_middle_itemz_item_extract_path %>",
          {working_middle_item_category_id: category_id},
           function(data){
		     //アイテムのリストを再配置
             document.getElementById("working_large_item_id").innerHTML = document.getElementById("working_middle_item_id_select_hide").innerHTML;
		     
             //短縮名のリストを再配置
		     document.getElementById("working_large_item_short_name").innerHTML = document.getElementById("working_middle_item_short_name_select_hide").innerHTML;
	       
           //編集モードならば、カテゴリー別のサブカテゴリーを抽出。
           //if (document.getElementById("action_flag").value == "edit"){
             var selectIndex = document.getElementById("working_middle_item_subcategory_id_call").value;
             setSubCategoryExtractByParentInitial(selectIndex);
           //}
           //サブカテゴリーがあれば、更にアイテムを絞り込む
           setItemExtractBySubCategory();
       });
     }
 }
 
  //カテゴリー&サブカテゴリー別にアイテムを抽出する処理
 function setItemExtractBySubCategory(){
   
   var category_id = document.getElementById("working_middle_item_category_id_call").value;
   //var working_subcategory_id = document.activeElement.value;
   //upd180208
   var working_subcategory_id = document.getElementById("working_middle_item_subcategory_id_call").value;
   
   //add condition 180208
   if (working_subcategory_id != ""){
     $.get("<%= working_middle_itemz_item_extract_subcategory_path %>",
        {working_middle_item_category_id: category_id, working_subcategory_id: working_subcategory_id},
         function(data){
		   //アイテムのリストを再配置
           document.getElementById("working_large_item_id").innerHTML = document.getElementById("working_middle_item_id_select_hide").innerHTML;
		   
		   //短縮名のリストを再配置
		   document.getElementById("working_large_item_short_name").innerHTML = document.getElementById("working_middle_item_short_name_select_hide").innerHTML;
		   //一旦手入力で選択する
		   //document.getElementById("working_large_item_short_name").value = "1"; 
		   //$(".searchableSelect2_2").trigger("change"); 
           
           
     });
   }
 }
  
  //カテゴリー別のサブカテゴリーを抽出する
  //add180205
  function setSubacategoryExtractByParent(controlFlag){
    
    var category_id = document.activeElement.value;
    
    //var category_id = document.activeElement.value;
      $.get("<%= working_subcategoriez_subcategory_extract_path %>",
        {working_category_id: category_id},
         function(data){
		   //アイテムのリストを再配置
           if (controlFlag == 1){
             //呼出用
             document.getElementById("working_middle_item_subcategory_id_call").innerHTML = document.getElementById("working_subcategory_select_hide").innerHTML;
		     //リストを未選択状態にする
		     document.getElementById("working_middle_item_subcategory_id_call").value = "";
             $('#working_middle_item_subcategory_id_call').trigger('change');
           
           }else{
             //登録用
             document.getElementById("working_middle_item_subcategory_id").innerHTML = document.getElementById("working_subcategory_select_hide").innerHTML;
             //リストを未選択状態にする
		     document.getElementById("working_middle_item_subcategory_id").value = "";
             $('#working_middle_item_subcategory_id').trigger('change');
           }
		  
	  });
  }
  
  //カテゴリー別のサブカテゴリーを抽出する
  //add180210
  function setSubCategoryExtractByParentInitial(selectIndex){
    
    var category_id = document.getElementById("working_middle_item_category_id_call").value;
    
      $.get("<%= working_subcategoriez_subcategory_extract_path %>",
        {working_category_id: category_id},
         function(data){
		   //アイテムのリストを再配置
             //呼出用
             document.getElementById("working_middle_item_subcategory_id_call").innerHTML = document.getElementById("working_subcategory_select_hide").innerHTML;
		     //リストを未選択状態にする
		     document.getElementById("working_middle_item_subcategory_id_call").value = selectIndex;
             $('#working_middle_item_subcategory_id_call').trigger('change');
           
           }
		  
      );
  }
  
  //add170822
  //短縮名をテキストへセット
  function setShortName(){
    var index = document.getElementById("working_large_item_short_name").selectedIndex;
	document.getElementById("working_large_item_short_name_manual").value = 
	  document.getElementById("working_large_item_short_name").options[index].innerText;
    
  }
  
  //add170223
  //歩掛りのセット(配管集計時)
  function setLaborType(){
    //obj = document.getElementById("construction_type").value;
    obj = parseInt(document.getElementById("construction_type").value);
    
    switch (obj){
      case INDEX_SUBTOTAL:
      //小計
        //アイテム名は自動でセットする。
        $(".searchableSelect2_2").val(ID_SUBTOTAL).trigger("change");
        $(".searchableSelect2_3").val(ID_SUBTOTAL).trigger("change");
        delivery_slip_header_id = document.getElementById("delivery_slip_header_id").value;
		line_number = document.getElementById("line_number").value;
	    $.get("<%= delivery_slip_detail_large_classificationz_subtotal_select_path %>",{delivery_slip_header_id: delivery_slip_header_id, line_number: line_number}, 
		  function(data){
	        //小計へセット
            //  見積金額
            obj = document.getElementById("delivery_slip_price").textContent;
            document.getElementById("delivery_slip_price").value = obj;
            //  実行金額
            obj = document.getElementById("execution_price").textContent;
            document.getElementById("execution_price").value = obj;
            //  歩掛計
            obj = document.getElementById("labor_productivity_unit_total").textContent;
            document.getElementById("labor_productivity_unit_total").value = obj;
            
		    }
	    );
        break;
	  case INDEX_DISCOUNT:
	  //値引き
        //アイテム名は自動でセットする。
	    $(".searchableSelect2_2").val(ID_DISCOUNT).trigger("change");
		$(".searchableSelect2_3").val(ID_DISCOUNT).trigger("change");
	    break;
      case INDEX_PIPING_WIRING_CONSTRUCTION:
        //アイテム名は自動でセット。
        //”配管配線工事”のiDに切り替える。
        $(".searchableSelect2_2").val(piping_wiring_construction_index).trigger("change");
        $(".searchableSelect2_3").val(piping_wiring_construction_index).trigger("change");
        
	    //配管配線チェック済みのものから歩掛りを集計する。
		delivery_slip_header_id = document.getElementById("delivery_slip_header_id").value;
		$.get("<%= delivery_slip_detail_large_classificationz_LPU_piping_wiring_select_path %>",{delivery_slip_header_id: delivery_slip_header_id}, 
		  function(data){
	        setLaborUnit();
		    }
	    );
		break;
	  case INDEX_EQUIPMENT_MOUNTING:
	    //アイテム名は自動でセット。
        $(".searchableSelect2_2").val(equipment_mounting_index).trigger("change");
        $(".searchableSelect2_3").val(equipment_mounting_index).trigger("change");
	    //機器取付チェック済みのものから歩掛りを集計する。
		delivery_slip_header_id = document.getElementById("delivery_slip_header_id").value;
	    $.get("<%= delivery_slip_detail_large_classificationz_LPU_equipment_mounting_select_path %>",{delivery_slip_header_id: delivery_slip_header_id}, 
		  function(data){
	        setLaborUnit();
		    }
	    );
	    break;
      case INDEX_LABOR_COST:
      //アイテム名は自動でセット。
        $(".searchableSelect2_2").val(labor_cost_index).trigger("change");
        $(".searchableSelect2_3").val(labor_cost_index).trigger("change");
        //労務費チェック済みのものから歩掛りを集計する。
        delivery_slip_header_id = document.getElementById("delivery_slip_header_id").value;
	    $.get("<%= delivery_slip_detail_large_classificationz_LPU_labor_cost_select_path %>",{delivery_slip_header_id: delivery_slip_header_id}, 
            function(data){
	          setLaborUnit();
		    }
	    );
		break;
     }
  }
  function setLaborUnit(){
  //合計値をセットする
      //del170306
      //歩掛りへセット
	  //obj = document.getElementById("labor_productivity_unit").textContent;
      //document.getElementById("labor_productivity_unit").value = obj;
	  //歩掛り計へセット
      obj = document.getElementById("labor_productivity_unit_total").textContent;
      document.getElementById("labor_productivity_unit_total").value = obj;
	  
	  //add180105
	  //納品金額計
	  obj = document.getElementById("delivery_slip_price").textContent;
      document.getElementById("delivery_slip_price").value = obj;
	  //実行金額計
	  obj = document.getElementById("execution_price").textContent;
      document.getElementById("execution_price").value = obj;
  }
  //add end 
  
  
   //実行→見積数量の自動変更
  function changeQuantity(flag)
  {  
     //upd170524
	 if (flag==0){
	   document.getElementById("execution_quantity").value = document.getElementById("quantity").value;
	 }
	 //金額も計算
	 calcTotalPrice();
	   
  } 
  
  //単位のセット
  function setUnit(){
      $.get("<%= delivery_slip_detail_large_classificationz_working_unit_id_select_path %>",
       {id: working_large_item_id },
        function(data){
		  //単位名もセット
		  setWorkingUnitName();
        }
      );       
  }
  //見積単価のセット
  function setWorkingUnitPrice(){
	  $.get("<%= delivery_slip_detail_large_classificationz_working_unit_price_select_path %>",
       {id: working_large_item_id },
        function(data){
          obj = document.getElementById("working_unit_price").textContent;
          document.getElementById("working_unit_price").value = obj;
		  
		  calcTotalPrice();
		  }
      ); 
  }    
  //実行単価のセット
  function setExecutionUnitPrice(){
      $.get("<%= delivery_slip_detail_large_classificationz_execution_unit_price_select_path %>",
       {id: working_large_item_id },
        function(data){
          obj = document.getElementById("execution_unit_price").textContent;
          document.getElementById("execution_unit_price").value = obj;
		  
		  calcTotalPrice();
		  //debugger;
		  }
      );
  }
  
  //歩掛りのセット
  function setLaborProductivityUnit(){
      $.get("<%= delivery_slip_detail_large_classificationz_labor_productivity_unit_select_path %>",
       {id: working_large_item_id },
        function(data){
          obj = document.getElementById("labor_productivity_unit").textContent;
          document.getElementById("labor_productivity_unit").value = obj;
		  }
      );      
  }
  //歩掛り計のセット
  function setLaborProductivityUnitTotal(){
	  $.get("<%= delivery_slip_detail_large_classificationz_labor_productivity_unit_total_select_path %>",
       {id: working_large_item_id },
        function(data){
          obj = document.getElementById("labor_productivity_unit_total").textContent;
          document.getElementById("labor_productivity_unit_total").value = obj;
		  
		  //debugger;
		  }
      );      
  }
  
   //項目名のセット
  function setWorkingLargeItemName()
  {  
   
    obj = document.getElementById("working_large_item_id");
     working_large_item_id = parseInt(obj.value);
	 
	 $.get("<%= delivery_slip_detail_large_classificationz_working_large_item_select_path %>",
       {id: working_large_item_id },
        function(data){
          obj = document.getElementById("working_large_item_name").textContent;
          document.getElementById("working_large_item_name").value = obj;
		  }
      );
   };  
  //仕様のセット
  function setWorkingLarageSpecification()
  {  
    obj = document.getElementById("working_large_item_id");
     working_large_item_id = parseInt(obj.value);
     $.get("<%= delivery_slip_detail_large_classificationz_working_large_specification_select_path %>",
       {id: working_large_item_id },
        function(data){
          obj = document.getElementById("working_large_specification").textContent;
          document.getElementById("working_large_specification").value = obj;
		  }
      );
   };  
   //単位名のセット
  function setWorkingUnitName()
  {  
    obj = document.getElementById("working_unit_id");
     working_unit_id = parseInt(obj.value);
     $.get("<%= delivery_slip_detail_large_classificationz_working_unit_name_select_path %>",
       {id: working_unit_id },
        function(data){
		  //debugger;
          obj = document.getElementById("working_unit_name").textContent;
          document.getElementById("working_unit_name").value = obj;
		  }
      );
   };  
   
  //歩掛り計を求める
  function calcLaborTotal()
  {
     //upd170306
	 //種別が通常の場合のみ処理
     var obj = document.getElementById("construction_type");
     if (obj.value == "0"){
	  
        var obj1 = document.getElementById("execution_quantity");
        var obj2 = document.getElementById("labor_productivity_unit");
        //実数＊歩掛
        if (obj1.value > 0 && obj2.value >0) {
          var num = (obj1.value * obj2.value)
          num = num * 1000;
          num = Math.round(num);
          num = num / 1000;
          document.getElementById("labor_productivity_unit_total").value = num;
        }
     }
     //upd170306
  }
  
   //区分が仕様を選択した時　　
   function setWhenSpecification(f)
   {
          obj = document.getElementById("delivery_slip_items_division_id");
          index = obj.selectedIndex;
          if (index == 1){
             //数量を０にセット
             obj2 = document.getElementById("quantity");
             obj2.value = 0;
			 
			 //実行数量も０にセット
             obj3 = document.getElementById("execution_quantity");
             obj3.value = 0;

             //単位をデフォ(１)にセット
             $(".searchableSelect2_4").select2("val","1");
          }
   }
   //見積・実行金額計算
  function calcTotalPrice()
  {
    var obj1 = document.getElementById("quantity"); 
    var obj2 = document.getElementById("execution_quantity");  
    
	//見積金額計算
    var obj3 = document.getElementById("working_unit_price");      
    if (obj3.value > 0){ 
      var num = parseInt(obj1.value) * parseInt(obj3.value);
      document.getElementById("delivery_slip_price").value = num;
    };
    //実行金額計算(仮)
    var obj3 = document.getElementById("execution_unit_price");
   
    if (obj3.value > 0){ 
      //var num = parseInt(obj1.value) * parseInt(obj3.value);
      if (obj2.value > 0){
        var num = parseInt(obj2.value) * parseInt(obj3.value);
        document.getElementById("execution_price").value = num;
      } 
    }
	
	//歩掛りも計算
	calcLaborTotal();
  } 
   
  //単価・金額をリセットする
  //add171017
  function clearPrice(){
    document.getElementById("working_unit_price").value = "";
   document.getElementById("execution_unit_price").value = "";
    document.getElementById("delivery_slip_price").value = "";
    document.getElementById("execution_price").value = "";
  }
  //歩掛をリセットする
  //add171017
  function clearLaborProductivityUnit(){
    document.getElementById("labor_productivity_unit").value = "";
    document.getElementById("labor_productivity_unit_total").value = "";
	
  }
  //

   
  //ENTER→TABキーに変換する処理。
  //modalの場合は、共通化ができない（なぜか）
  $('[tabindex]').keydown(function (e) {
    if (e.keyCode == 13 || e.keyCode == 9) {
        var tabindex = parseInt($(this).attr('tabindex'));
        $('[tabindex='+(tabindex+1)+']').focus();
    
	    return false;
	}
    
  });
  //次のタブへコントロールを移す（select2用)
  //modalの場合は、共通化ができない（なぜか）
  function nextControlSelect2(obj){
    nextIndex = obj.tabIndex + 1;
    $('[tabindex=' + nextIndex + ']').focus();
  }

  //登録時、マスター登録するか否かのメッセージを出す
 function submitAfterValidation() {
   
   var input_flag = false;
   
   
   //if (document.getElementById("working_large_item_id").value == 1){
     if (document.getElementById("check_update_item").checked == true || document.getElementById("check_update_all").checked == true){
       input_flag = true;
	 }
   //}
   
   if (input_flag == true){
   //手入力？
     if (window.confirm('マスター(共通)に保存しますか？')) {
	   document.getElementById("master_insert_flag").value = "true";
	 }else{
	   document.getElementById("master_insert_flag").value = "false"
	 }
   }
   
  // document.forms[0].submit();
   
 }

</script>
